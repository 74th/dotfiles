#.bashrc

#--------------------------------------
# OS判定
if [ "$(uname)" == 'Darwin' ]; then
	OSNAME='Mac'
elif [ "$(uname -o)" == 'Cygwin' ]; then
	OSNAME='Cygwin'
elif [ "$(uname -o)" == 'Msys' ]; then
	OSNAME='Msys'
else
	OSNAME='Linux'
fi
#--------------------------------------
# 文字コードの標準設定
export LESSCHARSET=UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
#--------------------------------------
# 個人コマンドのパスを通す
if [ -e $HOME/golang ];then
	export PATH=~/golang/bin:$PATH
fi
if [ -e $HOME/npm ];then
	export PATH=~/npm/bin:$PATH
fi
if [ -e $HOME/bin ];then
	export PATH=~/bin:$PATH
fi
export PATH=~/dotfiles/bin:$PATH
if [ $OSNAME = "Mac" ];then
	export PATH=~/dotfiles/bin/darwin:$PATH
fi
#--------------------------------------
# MacVim
if [ $OSNAME = "Mac" ];then
	alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
	alias vim='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
	alias vimless='/Applications/MacVim.app/Contents/Resources/vim/runtime/macros/less.sh'
fi
#--------------------------------------
# エディターはVim
if [ $OSNAME = "Mac" ];then
	export EDITOR=/Applications/MacVim.app/Contents/MacOS/vim
else
	export EDITOR=vim
fi
#--------------------------------------
# Bashの補完 bash-completion
# https://github.com/git/git/tree/master/contrib/completion
# http://d.hatena.ne.jp/youhey/20120501/1335855775
if [ $OSNAME = "Mac" ];then
	# まずbrew bundleすること
	if [ -f /usr/local/etc/bash_completion ]; then
		source /usr/local/etc/bash_completion
	fi
else
	if [ -f /usr/share/bash-completion ]; then
		source /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		source /etc/bash_completion
	fi
fi
# gitの補完
source ~/dotfiles/bashrc/git-completion/git-prompt.sh
source ~/dotfiles/bashrc/git-completion/git-completion.bash
source ~/dotfiles/bashrc/git-completion/git-flow-completion.bash
#--------------------------------------
#bashに着色する
export CLICOLOR=1
#--------------------------------------
# 端末・プロンプトの設定
# ホスト名とユーザ名の先頭 3文字をとりだす。全部だと長いので。
h3=`expr $HOSTNAME : '\(...\).*'`
u2=`expr $USER : '\(..\).*'`

# 現在のホストによってプロンプトの色を変える。
# 30Black 31Red 32Green 33Yellow 34Blue 35Magenta 36Cyan 37White
if [ $OSNAME = "Mac" ];then
	# MacOSはマゼンダ（橙）
	col=35
elif [ $OSNAME = "Cygwin" ];then
	# Windowsは緑
	col=32
elif [ $OSNAME = "Msys" ];then
	col=32
else
	# その他Linuxは水色
	col=36
fi
# Gitのブランチを表示
# 参考 http://qiita.com/caad1229/items/6d71d84933c8a87af0c4
function parse_git_branch {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}
# しばらく公式のを使ってみる
#   * ステージングにない変更
#   + ステージングにある状態
GIT_PS1_SHOWDIRTYSTATE=true
#   % ステージングにない新規ファイル
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWUPSTREAM=auto
# PS1='[h2:ホスト名][Gitリポジトリ][\W:カレントディレクトリ名][$/#]"
# ディレクトリ名は白
# ユーザの$は白、rootを示す#は赤
if [ $UID -eq 0 ]; then
	PS1='\[\e[${col}m\]$h3\[\e[33m\]$(__git_ps1)\[\e[m\]\W\$'
	PS1='\[\e[${col}m\]$h3\[\e[33m\]$(__git_ps1)\[\e[m\]\W\[\e[31m\]#\[\e[m\]'
else
	# 非表示の文字は\[ \]で囲うこと
	if [ $OSNAME = "Msys" ];then
		# Windowsだけなんか遅い
		PS1='\[\e[${col}m\]$h3\[\e[33m\]$(parse_git_branch)\[\e[m\]\W\$'
		PS1='\[\e[${col}m\]$h3\[\e[33m\]$(__git_ps1)\[\e[m\]\W\$'
	else
		PS1='\[\e[${col}m\]$h3\[\e[33m\]$(__git_ps1)\[\e[m\]\W\$'
	fi
fi
if [ "$TERM" == 'screen' -o "$TERM" == 'screen-bce' ]; then
	PS1=${PS1}'\[\033k$h3@\W\033\\\]'
fi

#--------------------------------------
# お砂糖コマンド
alias FreezeTargz='tar zcvf'
alias OpenTargz='tar zxvf'
alias FreezeTarbz2='tar jcvf'
alias OpenTarbz2='tar jxvf'
alias EditBashrc="vi ~/dotfiles/bashrc/bashrc"
alias EditMemo="gvim ~/memo.mkd"
alias ReloadBashrc="source ~/dotfiles/bashrc/bashrc"
alias ShowListenPorts='netstat -lnptua'
alias lsa='ls -alh'
alias ll='ls -alh'
alias df='df -h'
alias ":q"='exit'
alias ConvertLfAll='find . -type f | xargs -n 10 nkf -Lu --overwrite'
#--------------------------------------
# 誤入力対策コマンド
alias sl='ls'
#--------------------------------------
# Javacの文字コード
alias javac='javac -J-Dfile.encoding=utf-8'
alias java='java -Dfile.encoding=UTF-8'
#--------------------------------------
# bashをvim風に
set -o vi
#--------------------------------------
# bashでCtrl-wで、スラッシュまでを消す
stty werase undef
bind '\C-w:unix-filename-rubout'
#--------------------------------------
# Androidのスクリーンショットを取る
function TakeAndroidScreenshot() {
DATE=`date '+%y%m%d%H%M%S'`
adb shell mkdir /sdcard/screen_cap  
adb shell screencap -p /sdcard/screen_cap/screen-${DATE}.png
adb pull /sdcard/screen_cap/screen-${DATE}.png
adb shell rm /sdcard/screen_cap/screen-${DATE}.png
}

#--------------------------------------
# ImageMagic関連
alias ConvertToJpg='mogrify -format jpg'
alias ConvertToPng='mogrify -format png'
#--------------------------------------
# 色々更新
function UpdateDotfilesModule() {
	# git-completion.bash
	curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash > ~/dotfiles/bashrc/git-completion/git-completion.bash
}
#--------------------------------------
# Git簡単化
function pushpush() {
	git add -A
	git commit -m "at $HOSTNAME"
	git push origin master
}
alias commit='git commit'
alias add='git add'
alias push='git push'
alias pull='git pull'
alias log='git log --graph'
function checkout() {
	if [ $# -gt 0 ];then
		git checkout $*
	else
		git checkout `git branch | peco | sed -e "s/\* //g" | awk "{print \$1}"`
	fi
}
#--------------------------------------
# golang
if [ $OSNAME = "Mac" ];then
	export GOROOT=/usr/local/Cellar/go/1.6.2/libexec/
elif [ $OSNAME = "Cygwin" ];then
	export GOROOT=/cygdrive/c/Go
elif [ $OSNAME = "Msys" ];then
	export GOROOT=C:\\tools\\go
elif [ -e $HOME/Library/golang/latest ];then
	export GOROOT=$HOME/Library/golang/latest
elif [ -e /usr/local/lib/go ];then
	export GOROOT=/usr/local/lib/go
elif [ -e /usr/lib/go ];then
	export GOROOT=/usr/lib/go
fi
if [ -e $HOME/go ];then
	export GOPATH=$HOME/go
	export GOPATH_DEF=$HOME/go
	export PATH=$GOPATH/bin:$PATH
fi
function ResetGopath() {
	export GOPATH=$GOPATH_DEF
}
#--------------------------------------
# vscode
if [ $OSNAME = "Mac" ];then
	code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}
fi
#--------------------------------------
# docker
function EnvDocker() {
	docker-machine start default
	eval $(docker-machine env default)
}
function DeleteStoppedDocker() {
	docker rm `docker ps -a | grep Exited | cut -c 1-12`
}
alias d='docker'
#--------------------------------------
# vimのエラー対策
# E437: terminal capability "cm" required
if [ "$TERM" == 'screen-bce' ]; then
	export TERM=screen
fi
#--------------------------------------
# コマンドにいろいろ色を付ける
if [ $OSNAME = "Mac" ];then
	alias ls='ls -G'
else
	alias ls='ls --color=auto'
fi
#--------------------------------------
if [ -e $HOME/npm/bin ];then
	# npmのパスをす
	export PATH=$HOME/npm/bin:$PATH
fi
#--------------------------------------
# MSYS2用の設定
if [ $OSNAME = "Msys" ];then
	source ~/dotfiles/bashrc/msys.sh
fi
#--------------------------------------
# 便利ディレクトリ
if [ $OSNAME = "Mac" ];then
	export HOMEBREW_FORMULA_DIR=/usr/local/Library/Formula
fi
#--------------------------------------
# 自分のチートシートディレクトリをpecoで開く
function OpenCheatSheets() {
	FILE=$(ls ~/mycheatsheets/ | peco)
	vimless -c "set syntax=markdown" ~/mycheatsheets/$FILE
}
function EditCheatSheets() {
	cd ~/mycheatsheets/
	git pull origin master
	FILE=$(ls ~/mycheatsheets/ | peco)
	vim ~/mycheatsheets/$FILE
	git add -A
	git commit -m "at $HOSTNAME"
	git push origin master
	cd -
}
