#.bashrc

#--------------------------------------
# OS判定
if [ "$(uname)" == 'Darwin' ]; then
	OSNAME='Mac'
elif [ "$(uname -o)" == 'Cygwin' ]; then
	OSNAME='Cygwin'
elif [ "$(uname -o)" == 'Msys' ]; then
	OSNAME='Msys'
else
	OSNAME='Linux'
fi
#--------------------------------------
# 文字コードの標準設定
export LESSCHARSET=UTF-8
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
#--------------------------------------
# 個人コマンドのパスを通す
export PATH=~/dotfiles/command:$PATH
#--------------------------------------
# MacVim
if [ $OSNAME = "Mac" ];then
	alias vi='env LANG=ja_JP.UTF-8 /Applications/MacVim.app/Contents/MacOS/Vim "$@"'
fi
#--------------------------------------
# エディターはVim
if [ $OSNAME = "Mac" ];then
	export EDITOR=/Applications/MacVim.app/Contents/MacOS/vim
else
	export EDITOR=vim
fi
#--------------------------------------
#bashに着色する
export CLICOLOR=1
#--------------------------------------
# 端末・プロンプトの設定
# ホスト名とユーザ名の先頭 3文字をとりだす。全部だと長いので。
h3=`expr $HOSTNAME : '\(...\).*'`
u2=`expr $USER : '\(..\).*'`

# 現在のホストによってプロンプトの色を変える。
# 30Black 31Red 32Green 33Yellow 34Blue 35Magenta 36Cyan 37White
if [ $OSNAME = "Mac" ];then
	# MacOSはマゼンダ（橙）
	col=35
else
	# その他Linuxは水色
	col=36
fi

# PS1="[h2:ホスト名][\W:カレントディレクトリ名][$/#]"
# ディレクトリ名は白
# ユーザの$は白、rootを示す#は赤
if [ $UID -eq 0 ]; then
	PS1="\[\e[${col}m\]$h3\[\e[m\]\W\[\e[31m\]#\[\e[m\]"
else
	PS1="\[\e[${col}m\]$h3\[\e[m\]\W\\$"
fi
if [ "$TERM" == 'screen' -o "$TERM" == 'screen-bce' ]; then
	PS1=${PS1}'\[\033k$h3@\W\033\\\]'
fi

#--------------------------------------
# お砂糖コマンド
alias FreezeTargz='tar zcvf'
alias OpenTargz='tar zxvf'
alias FreezeTarbz2='tar jcvf'
alias OpenTarbz2='tar jxvf'
alias EditBashrc="vi ~/dotfiles/bashrc/bashrc"
alias EditMemo="gvim ~/memo.mkd"
alias ReloadBashrc="source ~/dotfiles/bashrc/bashrc"
alias ShowListenPorts='netstat -lnptua'
alias lsa='ls -alh'
alias ll='ls -alh'
alias df='df -h'
alias ":q"='exit'
#--------------------------------------
# 誤入力対策コマンド
alias sl='ls'
#--------------------------------------
# Javacの文字コード
alias javac='javac -J-Dfile.encoding=utf-8'
alias java='java -Dfile.encoding=UTF-8'
#--------------------------------------
# Bashの補完 bash-completion
# http://d.hatena.ne.jp/youhey/20120501/1335855775
if [ $OSNAME = "Mac" ];then
	# --Mac--
	# まずbrew bundleすること
	if [ -f /usr/local/etc/bash_completion ]; then
		source /usr/local/etc/bash_completion
	fi
else
	if [ -f /usr/share/bash-completion ]; then
		source /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		source /etc/bash_completion
	fi
fi
# gitの補完
if [ -f ~/dotfiles/bashrc/git-completion/git-completion.bash ]; then
	source ~/dotfiles/bashrc/git-completion/git-completion.bash
fi

#--------------------------------------
# bashをvim風に
set -o vi
#--------------------------------------
# bashでCtrl-wで、スラッシュまでを消す
stty werase undef
bind '\C-w:unix-filename-rubout'
#--------------------------------------
# Androidのスクリーンショットを取る
function TakeAndroidScreenshot() {
DATE=`date '+%y%m%d%H%M%S'`
adb shell mkdir /sdcard/screen_cap  
adb shell screencap -p /sdcard/screen_cap/screen-${DATE}.png
adb pull /sdcard/screen_cap/screen-${DATE}.png
adb shell rm /sdcard/screen_cap/screen-${DATE}.png
}

#--------------------------------------
function SetGitUser() {
	git config --local user.name 74th
	git config --local user.email site@j74th.com
}
#--------------------------------------
# ImageMagic関連
alias ConvertToJpg='mogrify -format jpg'
alias ConvertToPng='mogrify -format png'
#--------------------------------------
# 色々更新
function UpdateDotfilesModule() {
	# git-completion.bash
	curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash > ~/dotfiles/bashrc/git-completion/git-completion.bash
}
#--------------------------------------
# Git簡単化
function GitPushPush() {
	git add -A
	git commit -m "at $HOSTNAME"
	git push origin master
}
function GitPush() {
	git push origin master
}
function GitPull() {
	git pull origin master
}
alias commit='git commit'
alias add='git add'
alias push='git push'
alias pull='git pull'
alias log='git log --graph'
#--------------------------------------
# golang
if [ $OSNAME = "Mac" ];then
	export GOROOT=/usr/local/Cellar/go/1.6.2/libexec/
elif [ $OSNAME = "Cygwin" ];then
	export GOROOT=/cygdrive/c/Go
elif [ $OSNAME = "Msys" ];then
	export GOROOT=C:\\tools\\go
elif [ -e /usr/local/lib/go ];then
	export GOROOT=/usr/local/lib/go
elif [ -e /usr/lib/go ];then
	export GOROOT=/usr/lib/go
fi
if [ -e $HOME/golang ];then
	export GOPATH=$HOME/golang
	export GOPATH_DEF=$HOME/golang
	export PATH=$GOPATH/bin:$PATH
fi
function ResetGopath() {
	export GOPATH=$GOPATH_DEF
}
#--------------------------------------
# vscode
if [ $OSNAME = "Mac" ];then
	code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}
fi
#--------------------------------------
# docker
function EnvDocker() {
docker-machine start default
	eval $(docker-machine env default)
}
function DeleteStoppedDocker() {
	docker rm `docker ps -a | grep Exited | cut -c 1-12`
}
alias d='docker'
#--------------------------------------
# vimのエラー対策
# E437: terminal capability "cm" required
if [ "$TERM" == 'screen-bce' ]; then
	export TERM=screen
fi
#--------------------------------------
# コマンドにいろいろ色を付ける
if [ $OSNAME = "Mac" ];then
	alias ls='ls -G'
else
	alias ls='ls --color=auto'
fi
#--------------------------------------
if [ -e $HOME/npm/bin ];then
	# npmのパスをす
	export PATH=$HOME/npm/bin:$PATH
fi
#--------------------------------------
# MSYS2用の設定
if [ $OSNAME = "Msys" ];then
	source ~/dotfiles/bashrc/msys.sh
fi
