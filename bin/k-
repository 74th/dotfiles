#!system-python

import sys
import subprocess
import tempfile
from typing import Optional


def select_target(resource_type: Optional[str] = None) -> list[str]:
    if resource_type:
        cmd = ["kubectl", "get", resource_type]
    else:
        cmd = ["kubectl", "get", "all"]
    with tempfile.NamedTemporaryFile(mode="wt") as fp:
        cmd_out = subprocess.run(cmd, check=True, capture_output=True, text=True)
        fp.write(cmd_out.stdout)
        fp.flush()
        peco_out = subprocess.run(
            ["peco", fp.name], check=True, text=True, capture_output=True
        )

    if peco_out.returncode != 0:
        return [""]

    return [line.split(" ")[0] for line in peco_out.stdout.splitlines()]


def kubectl_operation(operation: str, options: list[str], target: list[str]):
    cmd = ["kubectl", operation] + options + target
    subprocess.run(cmd, check=True, text=True)


def main():
    if len(sys.argv) == 0:
        print("Usage: k- OPERATION [OPTION...] [RESOURCE_TYPE]")
        sys.exit()
    if len(sys.argv) > 1:
        operation = sys.argv[1]

    options = [arg for arg in sys.argv[1:] if arg.startswith("-")]

    if len(sys.argv) > 2 and not sys.argv[-1].startswith("-"):
        resource_type = sys.argv[-1]
    else:
        resource_type = None

    targets = select_target(resource_type)

    if not targets:
        sys.exit(1)

    if resource_type:
        targets = [f"{resource_type}/{t}" for t in targets]

    kubectl_operation(operation, options, targets)


if __name__ == "__main__":
    main()
